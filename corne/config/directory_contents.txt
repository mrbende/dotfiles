# Directory Structure
.
├── CMakeLists.txt
├── corne.conf
├── corne.keymap
├── directory_contents.txt
├── display
│   ├── CMakeLists.txt
│   ├── custom_status_screen.c
│   ├── Kconfig.overlay
│   ├── waifu_data.h
│   ├── waifu_image.c
│   └── waifu.bin
├── forge
│   ├── base.dtsi
│   ├── behaviors.dtsi
│   ├── L0_qwerty.dtsi
│   ├── L1_symbols.dtsi
│   ├── L2_function.dtsi
│   ├── L3_editor.dtsi
│   ├── L4_system.dtsi
│   └── macros.dtsi
├── README.md
└── west.yml

3 directories, 20 files

# File Contents


# ===========================================
# FILE: ./CMakeLists.txt
# ===========================================

add_subdirectory(display)




# ===========================================
# FILE: ./corne.conf
# ===========================================

# Turn on logging, and set ZMK logging to debug output
# CONFIG_ZMK_USB_LOGGING=y

# Reset BT connections on next firmware boot
# CONFIG_ZMK_BLE_CLEAR_BONDS_ON_START=y
# Enable display and custom screen
CONFIG_ZMK_DISPLAY=y

# nice!view settings
CONFIG_ZMK_DISPLAY_WORK_QUEUE_DEDICATED=y
CONFIG_ZMK_DISPLAY_DEDICATED_THREAD_STACK_SIZE=2048

# Boost Bluetooth TX power
CONFIG_BT_CTLR_TX_PWR_PLUS_8=y

# Require passkey on pairing
CONFIG_ZMK_BLE_PASSKEY_ENTRY=y

# Sleep timeout 30 minutes
CONFIG_ZMK_SLEEP=y
CONFIG_ZMK_IDLE_SLEEP_TIMEOUT=1800000

# Enable eager debouncing
CONFIG_ZMK_KSCAN_DEBOUNCE_PRESS_MS=1
CONFIG_ZMK_KSCAN_DEBOUNCE_RELEASE_MS=7

# Fix battery reporting on Windows
CONFIG_BT_GATT_ENFORCE_SUBSCRIPTION=n

# Experimental: BLE improvements
CONFIG_ZMK_BLE_EXPERIMENTAL_FEATURES=y

# Report battery peripheral battery level
CONFIG_ZMK_SPLIT_BLE_CENTRAL_BATTERY_LEVEL_PROXY=y
CONFIG_ZMK_SPLIT_BLE_CENTRAL_BATTERY_LEVEL_FETCHING=y



# ===========================================
# FILE: ./corne.keymap
# ===========================================

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "./forge/base.dtsi"



# ===========================================
# FILE: ./display/CMakeLists.txt
# ===========================================

if(CONFIG_ZMK_DISPLAY)
    # Add status screen and image files
    target_sources_ifdef(CONFIG_ZMK_DISPLAY_STATUS_SCREEN_CUSTOM app PRIVATE 
        ${CMAKE_CURRENT_SOURCE_DIR}/custom_status_screen.c
        ${CMAKE_CURRENT_SOURCE_DIR}/waifu_image.c
    )
    
    # Generate waifu_data.h from waifu.bin
    add_custom_command(
        OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/waifu_data.h
        COMMAND xxd -i ${CMAKE_CURRENT_SOURCE_DIR}/waifu.bin > ${CMAKE_CURRENT_BINARY_DIR}/waifu_data.h
        DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/waifu.bin
    )
    
    target_include_directories(app PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
    add_custom_target(waifu_data DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/waifu_data.h)
    add_dependencies(app waifu_data)
endif()



# ===========================================
# FILE: ./display/custom_status_screen.c
# ===========================================

#include <zmk/display/status_screen.h>
#include <lvgl.h>
#include <zephyr/kernel.h>

#ifdef SHIELD_CORNE_RIGHT
// Only include the waifu image on the right side
extern const lv_img_dsc_t waifu_image;

lv_obj_t *zmk_display_status_screen() {
    // Create a full-screen container
    lv_obj_t *container = lv_obj_create(lv_scr_act());
    lv_obj_set_size(container, 160, 68);
    lv_obj_set_pos(container, 0, 0);
    
    // Create the image widget and place it in the container
    lv_obj_t *image = lv_img_create(container);
    lv_img_set_src(image, &waifu_image);
    lv_obj_align(image, LV_ALIGN_CENTER, 0, 0);
    
    return container;
}
#endif // SHIELD_CORNE_RIGHT



# ===========================================
# FILE: ./display/Kconfig.overlay
# ===========================================

# Only enable custom screen on the right side
if SHIELD_CORNE_RIGHT

config ZMK_DISPLAY_STATUS_SCREEN_CUSTOM
    bool "Custom waifu display screen"
    default y
    depends on ZMK_DISPLAY

# Disable default widgets for the right side only
config ZMK_WIDGET_BATTERY_STATUS
    default n

config ZMK_WIDGET_OUTPUT_STATUS
    default n

config ZMK_WIDGET_LAYER_STATUS
    default n

config ZMK_WIDGET_WPM_STATUS
    default n

endif # SHIELD_CORNE_RIGHT



# ===========================================
# FILE: ./display/waifu_data.h
# ===========================================


# ===========================================
# FILE: ./display/waifu_image.c
# ===========================================

#ifdef SHIELD_CORNE_RIGHT
// Only include this on the right side

#include <lvgl.h>
#include <zephyr/kernel.h>

// Include the generated header 
#include "waifu_data.h"

// Image descriptor for the waifu image
const lv_img_dsc_t waifu_image = {
    .header.cf = LV_IMG_CF_INDEXED_1BIT,
    .header.w = 160,
    .header.h = 68,
    .data_size = waifu_bin_len,  // Match the generated variable name
    .data = waifu_bin,           // Match the generated variable name
};
#endif // SHIELD_CORNE_RIGHT



# ===========================================
# FILE: ./display/waifu.bin
# ===========================================



# ===========================================
# FILE: ./forge/base.dtsi
# ===========================================

// ZMK Core Includes
#include <behaviors.dtsi>
// #include <behaviors/num_word.dtsi> // requires https://github.com/urob/zmk-auto-layer module
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layers
#define L0 0  // Base/QWERTY
#define SY 1  // Symbols/Numbers
#define FN 2  // Function/Window Management  
#define ED 3  // Code Editor
#define MA 4  // Macros/System

// Meh key
#define MEH LS(LC(LALT))
// Hyper key (Ctrl+Shift+Alt+Cmd)
#define HYPR LS(LC(LA(LGUI)))

// Custom keycodes for tmux
#define TMUX_PRE LC(A)    // Ctrl+A (tmux prefix)

// Custom keycodes for yabai
#define YABAI_LFT LA(H)    // Focus window left
#define YABAI_RGT LA(L)    // Focus window right
#define YABAI_UP LA(K)     // Focus window up
#define YABAI_DWN LA(J)    // Focus window down
#define YABAI_SPC1 LS(LA(N1))  // Space 1 (terminal)
#define YABAI_SPC2 LS(LA(N2))  // Space 2 (browser-work)
#define YABAI_SPC3 LS(LA(N3))  // Space 3 (slack)

// Vim keycodes (standardized definitions)
#define VIM_ZZ LS(Z)        // Vim ZZ (save and quit)
#define VIM_VS LS(V)        // Vim visual selection

// Behaviors Constants
#define TAPPING_TERM_MS 280
#define QUICK_TAP_MS 175
#define REQUIRE_PRIOR_IDLE_MS 150

// Key positions per hand
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39 40 41

#include "behaviors.dtsi"
#include "macros.dtsi"

// Alpha layer: uncomment desired, comment the others
// #include "L1_colemak-dh.dtsi"
// #include "L1_colemak.dtsi"
// #include "L1_dvorak.dtsi"
#include "L0_qwerty.dtsi"

// Other layers
#include "L1_symbols.dtsi"
#include "L2_function.dtsi"
#include "L3_editor.dtsi"
#include "L4_system.dtsi"



# ===========================================
# FILE: ./forge/behaviors.dtsi
# ===========================================

// ZMK Behaviors Configuration
&mt {
  flavor = "balanced";
  tapping-term-ms = <TAPPING_TERM_MS>;
  quick-tap-ms = <QUICK_TAP_MS>;
  require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
};

&lt {
  flavor = "balanced";
  tapping-term-ms = <TAPPING_TERM_MS>;
  quick-tap-ms = <QUICK_TAP_MS>;
  require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
};

&sk {
  quick-release;
};


/ {
  behaviors {
    /*
    Home Row Mods

    - tap: &kp <PARAM_2>
    - hold: &kp <PARAM_1>

    Example: &hrml LCMD T
    */
    /omit-if-no-ref/ hrml: hrm_left {
      bindings = <&kp>, <&kp>;
      compatible = "zmk,behavior-hold-tap";
      flavor = "balanced";
      hold-trigger-key-positions = <KEYS_R THUMBS>;
      hold-trigger-on-release;
      tapping-term-ms = <TAPPING_TERM_MS>;
      quick-tap-ms = <QUICK_TAP_MS>;
      require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
      #binding-cells = <2>;
    };

    /omit-if-no-ref/ hrmr: hrm_right {
      bindings = <&kp>, <&kp>;
      compatible = "zmk,behavior-hold-tap";
      flavor = "balanced";
      hold-trigger-key-positions = <KEYS_L THUMBS>;
      hold-trigger-on-release;
      tapping-term-ms = <TAPPING_TERM_MS>;
      quick-tap-ms = <QUICK_TAP_MS>;
      require-prior-idle-ms = <REQUIRE_PRIOR_IDLE_MS>;
      #binding-cells = <2>;
    };

    /*
    - tap: sticky shift
    - double-tap: caps-word (shift + tap mod-morph)
    - hold: shift

    From: https://github.com/urob/zmk-config/
    */
    /omit-if-no-ref/ smart_shift: smart_shift {
      compatible = "zmk,behavior-mod-morph";
      bindings = <&sk RSHFT>, <&caps_word>;
      mods = <(MOD_RSFT)>;
      #binding-cells = <0>;
    };


    /*
    - tap: backspace
    - hold: repeat backspace
    - shift + tap: delete
    - shift + hold: repeat delete

    From: https://zmk.dev/docs/behaviors/mod-morph#advanced-configuration
    */
    /omit-if-no-ref/ bkspc_del: backspace_delete {
      compatible = "zmk,behavior-mod-morph";
      bindings = <&kp BACKSPACE>, <&kp DELETE>;
      mods = <(MOD_LSFT|MOD_RSFT)>;
      #binding-cells = <0>;
    };

    /*
    - tap: #
    - double tap: ##
    */
    /omit-if-no-ref/ hash_td: tap_dance_hash {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_DASH";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp HASH>, <&TRIPLE_HASH>;
    };

    /*
    - tap: reset keyboard
    - hold: enter bootloader mode
    */
    /omit-if-no-ref/ rst_boot: rst_boot {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping-term-ms = <500>;
        flavor = "tap-preferred";
        bindings = <&bootloader>, <&sys_reset>;
    };
  };
};



# ===========================================
# FILE: ./forge/L0_qwerty.dtsi
# ===========================================

/**
 * Alpha Layer - QWERTY (Base)
 * Optimized for developer workflow with quick access to common keys
 */

/ {
  keymap {
    compatible = "zmk,keymap";

    qwerty_layer {
      display-name = "Base";
      bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
// │0              │1              │2              │3              │4              │5              │   │6              │7              │8              │9              │10             │11             │
    &kp TAB         &kp Q           &kp W           &kp E           &kp R           &kp T               &kp Y           &kp U           &kp I           &kp O           &kp P           &hash_td
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │12             │13             │14             │15             │16             │17             │   │18             │19             │20             │21             │22             │23             │
    &kp ESC         &hrml LCMD A    &hrml LALT S    &hrml LCTRL D   &kp F           &kp G               &kp H           &kp J           &hrmr RCTRL K   &hrmr RALT L    &hrmr SQT RCMD  &kp BSLH
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │24             │25             │26             │27             │28             │29             │   │30             │31             │32             │33             │34             │35             │
    &lt ED GRAVE    &kp Z           &kp X           &kp C           &kp V           &kp B               &kp N           &kp M           &kp COMMA       &kp DOT         &kp SEMICOLON   &lt MA SLASH
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
//                                                 │36             │37             │38             │   │39             │40             │41             │
                                                    &mo SY          &bkspc_del      &smart_shift        &kp ENTER       &kp SPACE       &mo FN
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
      >;
    };
  };
};



# ===========================================
# FILE: ./forge/L1_symbols.dtsi
# ===========================================

/**
 * Symbols, Numbers, and Navigation Layer
 * Optimized for quick access to symbols and numbers
 */

/ {
  keymap {
    compatible = "zmk,keymap";

    layer_2 {
      display-name = "Sym";
      bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
// │0              │1              │2              │3              │4              │5              │   │6              │7              │8              │9              │10             │11             │
    &kp TILDE       &kp N1          &kp N2          &kp N3          &kp N4          &kp N5              &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp DEL
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │12             │13  !          │14  @          │15  #          │16  $          │17  %          │   │18  ^          │19  &          │20  *          │21  +          │22  -          │23             │
    &kp GRAVE       &kp EXCL        &kp AT          &kp HASH        &kp DOLLAR      &kp PERCENT         &kp CARET       &kp AMPERSAND   &kp STAR        &kp PLUS        &kp MINUS       &trans
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │24             │25  ?          │26  |          │27  {          │28  [          │29  (          │   │30  )          │31  ]          │32  }          │33  =          │34  _          │35             │
    &trans          &kp QMARK       &kp PIPE        &kp LBRC        &kp LBKT        &kp LPAR            &kp RPAR        &kp RBKT        &kp RBRC        &kp EQUAL       &kp UNDER       &trans 
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
//                                                 │36             │37             │38             │   │39             │40             │41             │
                                                    &trans          &trans          &trans              &trans          &mo FN          &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
      >;
    };
  };
};



# ===========================================
# FILE: ./forge/L2_function.dtsi
# ===========================================

/**
 * Function, Media, and Navigation Layer
 * Includes function keys, media controls, and arrow keys
 */

/ {
  keymap {
    compatible = "zmk,keymap";

    fn_layer {
      display-name = "Func";
      bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
// │0              │1              │2              │3              │4              │5              │   │6              │7              │8              │9              │10             │11             │
    &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6              &kp F7          &kp F8          &kp F9          &kp F10         &kp F11         &kp F12
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │12             │13             │14             │15             │16             │17             │   │18             │19             │20             │21             │22             │23             │
    &kp C_MUTE      &kp C_VOL_DN    &kp C_VOL_UP    &kp C_PREV      &kp C_PP        &kp C_NEXT          &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &kp SLASH       &kp QUESTION
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │24             │25             │26             │27  kill window│28  fullscreen │29  balance yabai  │30             │31             │32             │33             │34             │35             │
    &trans          &kp C_BRI_DN    &kp C_BRI_UP    &kp LS(LA(D))   &kp LS(LA(F))   &kp LS(LA(B))       &kp YABAI_LFT   &kp YABAI_DWN   &kp YABAI_UP    &kp YABAI_RGT   &kp COMMA       &kp DOT
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
//                                                 │36             │37             │38             │   │39             │40             │41             │
                                                    &trans          &trans          &trans              &trans          &trans          &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
      >;
    };
  };
};



# ===========================================
# FILE: ./forge/L3_editor.dtsi
# ===========================================

/**
 * Code Editor Layer
 * Specialized for coding, vim, tmux, and advanced editing operations
 */

/ {
  keymap {
    compatible = "zmk,keymap";

    editor_layer {
      display-name = "Edit";
      bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
// │0              │1              │2              │3              │4              │5              │   │6              │7              │8              │9              │10             │11             │
    &kp LG(S)       &kp LC(S)       &kp LC(W)       &kp LC(E)       &kp LC(R)       &kp VIM_ZZ          &TMUX_HSPLIT    &TMUX_NEXT      &TMUX_PREV      &TMUX_SESS      &TMUX_COPY      &kp LA(LC(ENTER))
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │12             │13             │14             │15             │16             │17             │   │18             │19             │20             │21             │22             │23             │
    &kp LG(A)       &kp LS(LA(S))   &kp LS(LA(D))   &kp LG(D)       &kp LG(F)       &kp VIM_VS          &TMUX_VSPLIT    &kp LS(LG(LBKT))&kp LS(LG(RBKT))&kp LC(G)       &kp LG(P)       &kp LG(ENTER)
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │24             │25             │26             │27             │28             │29             │   │30             │31             │32             │33             │34             │35             │
    &trans          &kp LG(Z)       &kp LG(X)       &kp LG(C)       &kp LG(V)       &kp LC(O)            &VIM_SAVE       &kp YABAI_SPC1  &kp YABAI_SPC2  &kp YABAI_SPC3  &VIM_SAVE_QUIT   &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
//                                                 │36             │37             │38             │   │39             │40             │41             │
                                                    &trans          &trans          &trans              &trans          &mo FN          &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
      >;
    };
  };
};



# ===========================================
# FILE: ./forge/L4_system.dtsi
# ===========================================

/**
 * System and Bluetooth Layer
 * Dedicated to system controls, bluetooth, and app launcher shortcuts
 */

/ {
  keymap {
    compatible = "zmk,keymap";

    system_layer {
      display-name = "Sys";
      bindings = <
// ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
// │0              │1              │2              │3              │4              │5              │   │6              │7              │8              │9              │10             │11             │
    &out OUT_TOG    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4        &kp LG(1)       &kp LG(2)       &kp LG(3)       &kp LG(4)       &kp LG(5)       &kp C_POWER
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │12             │13             │14             │15             │16             │17             │   │18             │19             │20             │21             │22             │23             │
    &rst_boot 0 0   &bt BT_PRV      &bt BT_NXT      &bt BT_CLR      &kp LS(LA(G))   &kp LS(LA(T))       &kp LG(6)       &kp LG(7)       &kp LG(8)       &kp LG(9)       &kp LG(0)       &rst_boot 0 0
// ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
// │24             │25             │26             │27             │28             │29             │   │30             │31             │32             │33             │34             │35             │
    &trans          &kp LS(LG(Z))   &kp HYPR        &kp MEH         &kp LC(V)       &kp LC(B)            &kp LG(MINUS)   &kp LC(TAB)     &kp LS(LC(TAB)) &kp LG(EQUAL)   &kp LG(W)       &trans
// ╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────├───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
//                                                 │36             │37             │38             │   │39             │40             │41             │
                                                    &trans          &kp CAPSLOCK    &trans              &trans          &trans          &trans
//                                                 ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
      >;
    };
  };
};



# ===========================================
# FILE: ./forge/macros.dtsi
# ===========================================

/ {
  macros {

    /* ───────────  Short-layer/clear helpers supplied by ZMK  ─────────── */
    LM: layer_mod    { compatible = "zmk,behavior-macro-two-param"; #binding-cells = <2>;
                       bindings = <&macro_param_1to1>, <&macro_press &mo MACRO_PLACEHOLDER>,
                                  <&macro_param_2to1>, <&macro_press &kp MACRO_PLACEHOLDER>,
                                  <&macro_pause_for_release>,
                                  <&macro_param_2to1>, <&macro_release &kp MACRO_PLACEHOLDER>,
                                  <&macro_param_1to1>, <&macro_release &mo MACRO_PLACEHOLDER>; };

    CSL: clear_sl    { compatible = "zmk,behavior-macro-one-param";  #binding-cells = <1>;
                       bindings = <&macro_tap &kp K_CANCEL>, <&macro_param_1to1>,
                                  <&macro_press &sl MACRO_PLACEHOLDER>,
                                  <&macro_pause_for_release>,
                                  <&macro_param_1to1>, <&macro_release &sl MACRO_PLACEHOLDER>; };

    CMO: clear_mo    { compatible = "zmk,behavior-macro-one-param";  #binding-cells = <1>;
                       bindings = <&macro_tap &kp K_CANCEL>, <&macro_param_1to1>,
                                  <&macro_press &mo MACRO_PLACEHOLDER>,
                                  <&macro_pause_for_release>,
                                  <&macro_param_1to1>, <&macro_release &mo MACRO_PLACEHOLDER>; };


    TRIPLE_HASH: triple_hash {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = 
        <&macro_tap &kp HASH>,
        <&macro_tap &kp HASH>;
        <&macro_tap &kp HASH>;
      label = "TRIPLE_HASH";
    };

    /* ───────────  Vim helpers  ─────────── */

    VIM_SPLIT_HORZ: vim_split_horz {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &macro_press  &kp LCTRL >,
                   < &macro_tap    &kp W     >,
                   < &macro_release&kp LCTRL>,
                   < &macro_tap    &kp S     >;
        label = "VIM_SPLIT_HORZ";
    };

    VIM_SPLIT_VERT: vim_split_vert {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &macro_press  &kp LCTRL >,
                   < &macro_tap    &kp W     >,
                   < &macro_release&kp LCTRL>,
                   < &macro_tap    &kp V     >;
        label = "VIM_SPLIT_VERT";
    };

    VIM_SAVE: vim_save {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &kp COLON >,
                  < &kp W >,
                  < &kp ENTER >;
        label = "VIM_SAVE";
    };

    VIM_SAVE_QUIT: vim_save_quit {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &kp COLON >,
                  < &kp W >,
                  < &kp Q >,
                  < &kp ENTER >;
        label = "VIM_SAVE_QUIT";
    };

    /* ───────────  Tmux helpers (prefix = Ctrl-A)  ─────────── */

    TMUX_HSPLIT: tmux_hsplit {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &macro_press  &kp LCTRL >,
                   < &macro_tap    &kp A     >,
                   < &macro_release&kp LCTRL>,
                   < &macro_tap    &kp MINUS >;
        label = "TMUX_HSPLIT";
    };

    TMUX_VSPLIT: tmux_vsplit {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &macro_press  &kp LCTRL >,
                   < &macro_tap    &kp A     >,
                   < &macro_release&kp LCTRL>,
                   < &macro_tap    &kp LS(PIPE) >;
        label = "TMUX_VSPLIT";
    };

    TMUX_NEXT: tmux_next {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &macro_press  &kp LCTRL >,
                   < &macro_tap    &kp A     >,
                   < &macro_release&kp LCTRL>,
                   < &macro_tap    &kp N     >;
        label = "TMUX_NEXT";
    };

    TMUX_PREV: tmux_prev {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &macro_press  &kp LCTRL >,
                   < &macro_tap    &kp A     >,
                   < &macro_release&kp LCTRL>,
                   < &macro_tap    &kp P     >;
        label = "TMUX_PREV";
    };

    TMUX_SESS: tmux_sessionizer {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &macro_press  &kp LCTRL >,
                   < &macro_tap    &kp A     >,
                   < &macro_release&kp LCTRL>,
                   < &macro_tap    &kp F     >;
        label = "TMUX_SESSIONIZER";
    };

    TMUX_COPY: tmux_copy_mode {
        compatible     = "zmk,behavior-macro"; #binding-cells = <0>;
        bindings = < &macro_press  &kp LCTRL >,
                   < &macro_tap    &kp A     >,
                   < &macro_release&kp LCTRL>,
                   < &macro_tap    &kp V     >;
        label = "TMUX_COPY_MODE";
    };
  };
};



# ===========================================
# FILE: ./README.md
# ===========================================

# ZMK Corne Keyboard Configuration

## Overview

This document provides a comprehensive explanation of my ZMK configuration for the Corne keyboard. The layout is optimized for developer workflows with integration for macOS, Yabai window manager, Vim, and Tmux.

The configuration features:

- 5 layers with intuitive organization
- Home row mods for efficient modifier access
- Smart shift behavior with caps-word support
- Integrated macros for Vim and Tmux
- Custom keycodes for Yabai window management

## Keyboard Layout

The Corne is a 42-key split keyboard with the following physical layout:

```
┌───┬───┬───┬───┬───┬───┐   ┌───┬───┬───┬───┬───┬───┐
│   │   │   │   │   │   │   │   │   │   │   │   │   │
├───┼───┼───┼───┼───┼───┤   ├───┼───┼───┼───┼───┼───┤
│   │   │   │   │   │   │   │   │   │   │   │   │   │
├───┼───┼───┼───┼───┼───┤   ├───┼───┼───┼───┼───┼───┤
│   │   │   │   │   │   │   │   │   │   │   │   │   │
└───┴───┴───┼───┼───┼───┤   ├───┼───┼───┼───┴───┴───┘
            │   │   │   │   │   │   │   │
            └───┴───┴───┘   └───┴───┴───┘
```

## Layer 0: Base QWERTY Layer

The base layer uses QWERTY with optimized placement of essential keys.

```
┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
│ TAB │  Q  │  W  │  E  │  R  │  T  │   │  Y  │  U  │  I  │  O  │  P  │  #  │
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│ ESC │A/CMD│S/ALT│D/CTL│  F  │  G  │   │  H  │  J  │K/CTL│L/ALT│'/CMD│  \  │
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│`/ED │  Z  │  X  │  C  │  V  │  B  │   │  N  │  M  │  ,  │  .  │  ;  │//MA │
└─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
                  │ SYM │BKSPC│SHIFT│   │ENTER│SPACE│ FUN │
                  └─────┴─────┴─────┘   └─────┴─────┴─────┘
```

### Key Features:

- **Home Row Mods**:
  - Left: A (⌘), S (⌥), D (⌃)
  - Right: K (⌃), L (⌥), ' (⌘)
- **Special behaviors**:
  - Smart Shift: Tap for sticky shift, double-tap for caps-word, hold for shift
  - Backspace/Delete: Tap for backspace, shift+tap for delete
  - Hash (#) tap dance: Single tap for #, double tap for ###
- **Layer access**:
  - ED (Editor) layer: Hold ` (grave)
  - MA (System) layer: Hold / (slash)
  - SY (Symbols) layer: Hold left thumb
  - FN (Function) layer: Hold right thumb

## Layer 1: Symbols and Numbers Layer

This layer provides access to numbers and all symbols, organized in a logical pattern.

```
┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
│  ~  │  1  │  2  │  3  │  4  │  5  │   │  6  │  7  │  8  │  9  │  0  │ DEL │
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│  `  │  !  │  @  │  #  │  $  │  %  │   │  ^  │  &  │  *  │  +  │  -  │     │
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│     │  -  │  =  │  [  │  {  │  (  │   │  )  │  }  │  ]  │  =  │  _  │     │
└─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
                  │     │     │     │   │     │ FUN │     │
                  └─────┴─────┴─────┘   └─────┴─────┴─────┘
```

### Key Features:

- Numbers 0-9 on the top row
- Essential symbols organized by frequency of use
- Matching brackets/parentheses next to each other
- Quick access to mathematical operators
- All symbols formerly available via combos now directly accessible

## Layer 2: Function and Media Layer

This layer provides access to function keys, media controls, and navigation.

```
┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
│ F1  │ F2  │ F3  │ F4  │ F5  │ F6  │   │ F7  │ F8  │ F9  │ F10 │ F11 │ F12 │
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│MUTE │VOL- │VOL+ │PREV │PLAY │NEXT │   │ ←   │ ↓   │ ↑   │ →   │  /  │  ?  │
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│     │BRI- │BRI+ │KILL │FULL │BAL  │   │YAB← │YAB↓ │YAB↑ │YAB→ │  ,  │  .  │
└─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
                  │     │     │     │   │     │     │     │
                  └─────┴─────┴─────┘   └─────┴─────┴─────┘
```

### Key Features:

- Function keys F1-F12 across the top row
- Media controls on left middle row
- Standard navigation arrows on right middle row
- Brightness controls on bottom left
- Yabai window management controls:
  - KILL = Shift+Alt+D: Close the current window
  - FULL = Shift+Alt+F: Toggle fullscreen for current window
  - BAL = Shift+Alt+B: Balance window layout (equalize sizes)
  - YAB← = Alt+H: Focus window to the left
  - YAB↓ = Alt+J: Focus window below
  - YAB↑ = Alt+K: Focus window above
  - YAB→ = Alt+L: Focus window to the right

## Layer 3: Editor Layer

This layer is specialized for coding and text editing with Vim and Tmux integration.

```
┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
│⌘+S  │⌃+S  │⌃+W  │⌃+E  │⌃+R  │VIM:ZZ│   │TMUX:─│TMUX:n│TMUX:p│TMUX:f│TMUX:v│⌥⌃⏎  │
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│⌘+A  │⇧⌥S  │⇧⌥D  │⌘+D  │⌘+F  │VIM:VS│   │TMUX:|│⇧⌘[  │⇧⌘]  │⌃+G  │⌘+P  │⌘+⏎  │
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│     │⌘+Z  │⌘+X  │⌘+C  │⌘+V  │⌃+O  │   │VIM:w │YASP1│YASP2│YASP3│VIM:wq│     │
└─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
                  │     │     │     │   │     │ FUN │     │
                  └─────┴─────┴─────┘   └─────┴─────┴─────┘
```

### Key Features:

- Common editor commands on the left side
- Vim macros:
  - VIM:ZZ = Shift+Z: Save and quit
  - VIM:VS = Shift+V: Visual selection
  - VIM:w = :w⏎: Save current file
  - VIM:wq = :wq⏎: Save and quit
- Tmux controls (all use Ctrl+A prefix):
  - TMUX:─ = Split horizontally
  - TMUX:| = Split vertically
  - TMUX:n = Next window
  - TMUX:p = Previous window
  - TMUX:f = Session finder
  - TMUX:v = Copy mode
- Yabai workspace switching:
  - YASP1 = Shift+Alt+1: Switch to space 1 (terminal)
  - YASP2 = Shift+Alt+2: Switch to space 2 (browser-work)
  - YASP3 = Shift+Alt+3: Switch to space 3 (slack)

## Layer 4: System and Bluetooth Layer

This layer handles system controls, Bluetooth management, and application switching.

```
┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
│OUT  │BT 0 │BT 1 │BT 2 │BT 3 │BT 4 │   │⌘+1  │⌘+2  │⌘+3  │⌘+4  │⌘+5  │POWER│
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│RESET│BT←  │BT→  │BTCLR│⇧⌥G  │⇧⌥T  │   │⌘+6  │⌘+7  │⌘+8  │⌘+9  │⌘+0  │RESET│
├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
│     │⇧⌘Z  │HYPER│ MEH │⌃+V  │⌃+B  │   │⌘+-  │⌃TAB │⇧⌃TAB│⌘+=  │⌘+W  │     │
└─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
                  │     │CAPS │     │   │     │     │     │
                  └─────┴─────┴─────┘   └─────┴─────┴─────┘
```

### Key Features:

- Bluetooth controls on top left:
  - OUT = Toggle USB/BLE output
  - BT 0-4 = Select Bluetooth profile
  - BT← / BT→ = Cycle between profiles
  - BTCLR = Clear paired devices
- App switching shortcuts (⌘+1 through ⌘+0)
- Reset controls in corners
- Special modifier combinations:
  - HYPER = Ctrl+Shift+Alt+Cmd (super-modifier)
  - MEH = Ctrl+Shift+Alt
- Tab navigation with Ctrl+Tab and Shift+Ctrl+Tab
- Zoom controls with ⌘+ and ⌘-
- Capslock access

## Special Behaviors

### Home Row Mods

The configuration implements "home row mods" - modifier keys on the home row that activate when held and type letters when tapped:

```
Left hand:  A(⌘) S(⌥) D(⌃)
Right hand: K(⌃) L(⌥) '(⌘)
```

These use cross-hand activation to prevent accidental triggering. The behavior is configured with:

- `tapping-term-ms = <280>`: Time to determine tap vs hold
- `quick-tap-ms = <175>`: Window for quick repeated taps
- `require-prior-idle-ms = <150>`: Required idle time before registering a hold

### Smart Shift

Smart shift provides three functionalities in one key:

- Tap: Sticky shift (next key is uppercase)
- Double-tap: Caps-word (typing in all caps until space/punctuation)
- Hold: Standard shift modifier

### Backspace/Delete

The backspace key supports two operations:

- Tap or hold: Backspace
- Shift+tap or Shift+hold: Delete

## Macros

### Vim Macros

- `VIM_SAVE`: Types `:w<Enter>` to save current file
- `VIM_SAVE_QUIT`: Types `:wq<Enter>` to save and quit
- `VIM_SPLIT_HORZ`: Sends Ctrl+W then S to split horizontally
- `VIM_SPLIT_VERT`: Sends Ctrl+W then V to split vertically

### Tmux Macros

All tmux macros start with Ctrl+A (the tmux prefix), then:

- `TMUX_HSPLIT`: Sends `-` to create horizontal split
- `TMUX_VSPLIT`: Sends `|` to create vertical split
- `TMUX_NEXT`: Sends `n` to go to next window
- `TMUX_PREV`: Sends `p` to go to previous window
- `TMUX_SESS`: Sends `f` to open session finder
- `TMUX_COPY`: Sends `v` to enter copy mode

## Yabai Integration

The layout integrates with yabai window manager through dedicated keybindings:

- Window focusing: Alt+H/J/K/L
- Window management: Shift+Alt+D/F/B
- Space switching: Shift+Alt+1/2/3

## Bluetooth Configuration

- Supports 5 Bluetooth profiles (BT 0-4)
- Includes profile cycling (BT_PRV, BT_NXT)
- Clear pairing with BT_CLR
- Toggle between USB and Bluetooth with OUT_TOG
- Configured for secure pairing with passkey

## Power Management

- Sleep timeout set to 30 minutes
- Enhanced Bluetooth TX power
- Battery level reporting for split halves

---

This configuration is designed to be intuitive while providing access to all necessary functions without relying on combo keys. The layer organization follows logical groupings with related functionality placed together for easier memorization.



# ===========================================
# FILE: ./west.yml
# ===========================================

- name: zmk-auto-layer
  remote: urob
  revision: main

- name: zmk-tri-state
  remote: urob
  revision: main


